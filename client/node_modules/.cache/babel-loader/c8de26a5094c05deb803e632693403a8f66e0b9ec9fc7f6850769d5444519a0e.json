{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\task-manager-final\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// client/src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [editTask, setEditTask] = useState(null);\n\n  // ✅ Fetch tasks from backend\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/tasks\");\n      setTasks(res.data);\n    } catch (err) {\n      console.error(\"❌ Error fetching tasks:\", err);\n    }\n  };\n\n  // ✅ Add or Edit task\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (editTask) {\n      // Editing\n      try {\n        await axios.put(`http://localhost:5000/api/tasks/${editTask.id}`, {\n          title,\n          description\n        });\n        setEditTask(null);\n        setTitle(\"\");\n        setDescription(\"\");\n        fetchTasks();\n      } catch (err) {\n        console.error(\"❌ Error updating task:\", err);\n      }\n    } else {\n      // Adding\n      try {\n        await axios.post(\"http://localhost:5000/api/tasks\", {\n          title,\n          description\n        });\n        setTitle(\"\");\n        setDescription(\"\");\n        fetchTasks();\n      } catch (err) {\n        console.error(\"❌ Error adding task:\", err);\n      }\n    }\n  };\n\n  // ✅ Delete task\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/tasks/${id}`);\n      fetchTasks();\n    } catch (err) {\n      console.error(\"❌ Error deleting task:\", err);\n    }\n  };\n\n  // ✅ Edit task\n  const handleEdit = task => {\n    setEditTask(task);\n    setTitle(task.title);\n    setDescription(task.description);\n  };\n\n  // ✅ Mark task as complete\n  const handleComplete = async id => {\n    try {\n      await axios.patch(`http://localhost:5000/api/tasks/${id}/complete`);\n      fetchTasks();\n    } catch (err) {\n      console.error(\"❌ Error completing task:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Task description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editTask ? \"Update Task\" : \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `task ${task.completed ? \"completed\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-actions\",\n          children: [!task.completed && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleComplete(task.id),\n            children: \"Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(task),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dd7qDZ5e8a3Py78AMfJsYqsetXI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","title","setTitle","description","setDescription","editTask","setEditTask","fetchTasks","res","get","data","err","console","error","handleSubmit","e","preventDefault","put","id","post","handleDelete","delete","handleEdit","task","handleComplete","patch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","map","completed","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/task-manager-final/client/src/App.js"],"sourcesContent":["// client/src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [editTask, setEditTask] = useState(null);\n\n  // ✅ Fetch tasks from backend\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/tasks\");\n      setTasks(res.data);\n    } catch (err) {\n      console.error(\"❌ Error fetching tasks:\", err);\n    }\n  };\n\n  // ✅ Add or Edit task\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (editTask) {\n      // Editing\n      try {\n        await axios.put(`http://localhost:5000/api/tasks/${editTask.id}`, {\n          title,\n          description,\n        });\n        setEditTask(null);\n        setTitle(\"\");\n        setDescription(\"\");\n        fetchTasks();\n      } catch (err) {\n        console.error(\"❌ Error updating task:\", err);\n      }\n    } else {\n      // Adding\n      try {\n        await axios.post(\"http://localhost:5000/api/tasks\", {\n          title,\n          description,\n        });\n        setTitle(\"\");\n        setDescription(\"\");\n        fetchTasks();\n      } catch (err) {\n        console.error(\"❌ Error adding task:\", err);\n      }\n    }\n  };\n\n  // ✅ Delete task\n  const handleDelete = async (id) => {\n    try {\n      await axios.delete(`http://localhost:5000/api/tasks/${id}`);\n      fetchTasks();\n    } catch (err) {\n      console.error(\"❌ Error deleting task:\", err);\n    }\n  };\n\n  // ✅ Edit task\n  const handleEdit = (task) => {\n    setEditTask(task);\n    setTitle(task.title);\n    setDescription(task.description);\n  };\n\n  // ✅ Mark task as complete\n  const handleComplete = async (id) => {\n    try {\n      await axios.patch(`http://localhost:5000/api/tasks/${id}/complete`);\n      fetchTasks();\n    } catch (err) {\n      console.error(\"❌ Error completing task:\", err);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Task Manager</h1>\n\n      <form onSubmit={handleSubmit} className=\"task-form\">\n        <input\n          type=\"text\"\n          placeholder=\"Task title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          required\n        />\n        <textarea\n          placeholder=\"Task description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <button type=\"submit\">{editTask ? \"Update Task\" : \"Add Task\"}</button>\n      </form>\n\n      <div className=\"tasks\">\n        {tasks.map((task) => (\n          <div\n            key={task.id}\n            className={`task ${task.completed ? \"completed\" : \"\"}`}\n          >\n            <h3>{task.title}</h3>\n            <p>{task.description}</p>\n\n            <div className=\"task-actions\">\n              {!task.completed && (\n                <button onClick={() => handleComplete(task.id)}>\n                  Complete\n                </button>\n              )}\n              <button onClick={() => handleEdit(task)}>Edit</button>\n              <button onClick={() => handleDelete(task.id)}>Delete</button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}