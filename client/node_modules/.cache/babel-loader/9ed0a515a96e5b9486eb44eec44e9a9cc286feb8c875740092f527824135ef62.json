{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\task-manager-final\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [editingTask, setEditingTask] = useState(null);\n  const API = \"/api/tasks\";\n\n  // ✅ Fetch tasks from backend\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  async function fetchTasks() {\n    const res = await fetch(API);\n    const data = await res.json();\n    setTasks(data);\n  }\n\n  // ✅ Add new task\n  async function addTask(e) {\n    e.preventDefault();\n    if (!title) return;\n    const res = await fetch(API, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title,\n        description\n      })\n    });\n    const newTask = await res.json();\n    setTasks([newTask, ...tasks]);\n    setTitle(\"\");\n    setDescription(\"\");\n  }\n\n  // ✅ Toggle complete / undo\n  async function toggleComplete(task) {\n    const res = await fetch(`${API}/${task.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        completed: task.completed ? 0 : 1\n      })\n    });\n    const updated = await res.json();\n    setTasks(tasks.map(t => t.id === updated.id ? updated : t));\n  }\n\n  // ✅ Start editing\n  function startEdit(task) {\n    setEditingTask(task);\n    setTitle(task.title);\n    setDescription(task.description || \"\");\n  }\n\n  // ✅ Save edit\n  async function saveEdit(e) {\n    e.preventDefault();\n    if (!editingTask) return;\n    const res = await fetch(`${API}/${editingTask.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        completed: editingTask.completed\n      })\n    });\n    const updated = await res.json();\n    setTasks(tasks.map(t => t.id === updated.id ? updated : t));\n    setEditingTask(null);\n    setTitle(\"\");\n    setDescription(\"\");\n  }\n\n  // ✅ Delete task\n  async function deleteTask(id) {\n    await fetch(`${API}/${id}`, {\n      method: \"DELETE\"\n    });\n    setTasks(tasks.filter(t => t.id !== id));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"MySQL + Node.js + React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: editingTask ? saveEdit : addTask,\n        className: \"task-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          placeholder: \"Task title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          placeholder: \"Description (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: editingTask ? \"Save Edit\" : \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), editingTask && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            setEditingTask(null);\n            setTitle(\"\");\n            setDescription(\"\");\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"tasks\",\n        children: [tasks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty\",\n          children: \"No tasks yet \\u2014 add one!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"article\", {\n          className: `task ${task.completed ? \"done\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-main\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleComplete(task),\n              children: task.completed ? \"Undo\" : \"Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startEdit(task),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTask(task.id),\n              className: \"danger\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Runs on ports: client 3000 \\u2192 server 5000 \\u2192 MySQL 3306\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DLQY2d8UfrhXHe32AY+AEEKfS+o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","title","setTitle","description","setDescription","editingTask","setEditingTask","API","fetchTasks","res","fetch","data","json","addTask","e","preventDefault","method","headers","body","JSON","stringify","newTask","toggleComplete","task","id","completed","updated","map","t","startEdit","saveEdit","deleteTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","type","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/task-manager-final/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [editingTask, setEditingTask] = useState(null);\n  const API = \"/api/tasks\";\n\n  // ✅ Fetch tasks from backend\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  async function fetchTasks() {\n    const res = await fetch(API);\n    const data = await res.json();\n    setTasks(data);\n  }\n\n  // ✅ Add new task\n  async function addTask(e) {\n    e.preventDefault();\n    if (!title) return;\n\n    const res = await fetch(API, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ title, description }),\n    });\n\n    const newTask = await res.json();\n    setTasks([newTask, ...tasks]);\n    setTitle(\"\");\n    setDescription(\"\");\n  }\n\n  // ✅ Toggle complete / undo\n  async function toggleComplete(task) {\n    const res = await fetch(`${API}/${task.id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ completed: task.completed ? 0 : 1 }),\n    });\n\n    const updated = await res.json();\n    setTasks(tasks.map((t) => (t.id === updated.id ? updated : t)));\n  }\n\n  // ✅ Start editing\n  function startEdit(task) {\n    setEditingTask(task);\n    setTitle(task.title);\n    setDescription(task.description || \"\");\n  }\n\n  // ✅ Save edit\n  async function saveEdit(e) {\n    e.preventDefault();\n    if (!editingTask) return;\n\n    const res = await fetch(`${API}/${editingTask.id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        title,\n        description,\n        completed: editingTask.completed,\n      }),\n    });\n\n    const updated = await res.json();\n    setTasks(tasks.map((t) => (t.id === updated.id ? updated : t)));\n    setEditingTask(null);\n    setTitle(\"\");\n    setDescription(\"\");\n  }\n\n  // ✅ Delete task\n  async function deleteTask(id) {\n    await fetch(`${API}/${id}`, { method: \"DELETE\" });\n    setTasks(tasks.filter((t) => t.id !== id));\n  }\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Task Manager</h1>\n        <p>MySQL + Node.js + React</p>\n      </header>\n\n      <main>\n        {/* ✅ Form for Add / Edit */}\n        <form onSubmit={editingTask ? saveEdit : addTask} className=\"task-form\">\n          <input\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"Task title\"\n          />\n          <input\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder=\"Description (optional)\"\n          />\n          <button type=\"submit\">\n            {editingTask ? \"Save Edit\" : \"Add Task\"}\n          </button>\n          {editingTask && (\n            <button\n              type=\"button\"\n              onClick={() => {\n                setEditingTask(null);\n                setTitle(\"\");\n                setDescription(\"\");\n              }}\n            >\n              Cancel\n            </button>\n          )}\n        </form>\n\n        {/* ✅ List tasks */}\n        <section className=\"tasks\">\n          {tasks.length === 0 && (\n            <p className=\"empty\">No tasks yet — add one!</p>\n          )}\n          {tasks.map((task) => (\n            <article\n              key={task.id}\n              className={`task ${task.completed ? \"done\" : \"\"}`}\n            >\n              <div className=\"task-main\">\n                <h3>{task.title}</h3>\n                <p>{task.description}</p>\n              </div>\n              <div className=\"task-actions\">\n                <button onClick={() => toggleComplete(task)}>\n                  {task.completed ? \"Undo\" : \"Complete\"}\n                </button>\n                <button onClick={() => startEdit(task)}>Edit</button>\n                <button onClick={() => deleteTask(task.id)} className=\"danger\">\n                  Delete\n                </button>\n              </div>\n            </article>\n          ))}\n        </section>\n      </main>\n\n      <footer>\n        <small>Runs on ports: client 3000 → server 5000 → MySQL 3306</small>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}