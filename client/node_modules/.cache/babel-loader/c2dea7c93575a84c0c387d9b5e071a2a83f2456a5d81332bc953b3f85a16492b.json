{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\task-manager-final\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  // Load from localStorage when app starts\n  useEffect(() => {\n    const saved = localStorage.getItem(\"tasks\");\n    if (saved) {\n      setTasks(JSON.parse(saved));\n    }\n  }, []);\n\n  // Save to localStorage whenever tasks change\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n  function addTask(e) {\n    e.preventDefault();\n    if (!title) return;\n    const newTask = {\n      id: Date.now(),\n      title,\n      description,\n      completed: false\n    };\n    setTasks([newTask, ...tasks]);\n    setTitle(\"\");\n    setDescription(\"\");\n  }\n  function toggleComplete(id) {\n    setTasks(tasks.map(t => t.id === id ? {\n      ...t,\n      completed: !t.completed\n    } : t));\n  }\n  function deleteTask(id) {\n    setTasks(tasks.filter(t => t.id !== id));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Task Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Data saved permanently in your browser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addTask,\n        className: \"task-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          placeholder: \"Task title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          placeholder: \"Description (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"tasks\",\n        children: [tasks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty\",\n          children: \"No tasks yet \\u2014 add one!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"article\", {\n          className: `task ${task.completed ? \"done\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-main\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleComplete(task.id),\n              children: task.completed ? \"Undo\" : \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTask(task.id),\n              className: \"danger\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Stored with localStorage \\u2014 survives refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RL4VXi1CAvBJjhYZNpYxfwfhZaU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","title","setTitle","description","setDescription","saved","localStorage","getItem","JSON","parse","setItem","stringify","addTask","e","preventDefault","newTask","id","Date","now","completed","toggleComplete","map","t","deleteTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","type","length","task","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/task-manager-final/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  // Load from localStorage when app starts\n  useEffect(() => {\n    const saved = localStorage.getItem(\"tasks\");\n    if (saved) {\n      setTasks(JSON.parse(saved));\n    }\n  }, []);\n\n  // Save to localStorage whenever tasks change\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  function addTask(e) {\n    e.preventDefault();\n    if (!title) return;\n    const newTask = {\n      id: Date.now(),\n      title,\n      description,\n      completed: false,\n    };\n    setTasks([newTask, ...tasks]);\n    setTitle(\"\");\n    setDescription(\"\");\n  }\n\n  function toggleComplete(id) {\n    setTasks(\n      tasks.map((t) => (t.id === id ? { ...t, completed: !t.completed } : t))\n    );\n  }\n\n  function deleteTask(id) {\n    setTasks(tasks.filter((t) => t.id !== id));\n  }\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1> Task Manager</h1>\n        <p>Data saved permanently in your browser</p>\n      </header>\n\n      <main>\n        <form onSubmit={addTask} className=\"task-form\">\n          <input\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"Task title\"\n          />\n          <input\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder=\"Description (optional)\"\n          />\n          <button type=\"submit\">Add Task</button>\n        </form>\n\n        <section className=\"tasks\">\n          {tasks.length === 0 && (\n            <p className=\"empty\">No tasks yet — add one!</p>\n          )}\n          {tasks.map((task) => (\n            <article\n              key={task.id}\n              className={`task ${task.completed ? \"done\" : \"\"}`}\n            >\n              <div className=\"task-main\">\n                <h3>{task.title}</h3>\n                <p>{task.description}</p>\n              </div>\n              <div className=\"task-actions\">\n                <button onClick={() => toggleComplete(task.id)}>\n                  {task.completed ? \"Undo\" : \"Done\"}\n                </button>\n                <button onClick={() => deleteTask(task.id)} className=\"danger\">\n                  Delete\n                </button>\n              </div>\n            </article>\n          ))}\n        </section>\n      </main>\n\n      <footer>\n        <small>Stored with localStorage — survives refresh</small>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}