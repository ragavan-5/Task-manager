{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\task-manager-final\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// client/src/App.js\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [editingId, setEditingId] = useState(null);\n\n  // Use relative path so proxy (create-react-app) forwards to backend if configured.\n  const API_BASE = \"/api/tasks\";\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  async function fetchTasks() {\n    try {\n      const res = await fetch(API_BASE);\n      const data = await res.json();\n      setTasks(data);\n    } catch (err) {\n      console.error(\"Fetch tasks error:\", err);\n    }\n  }\n\n  // Add or Save (edit)\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (!title.trim()) return;\n    try {\n      if (editingId === null) {\n        // Create\n        const res = await fetch(API_BASE, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            title: title.trim(),\n            description\n          })\n        });\n        if (!res.ok) throw new Error(\"Create failed\");\n        const created = await res.json();\n        // Put newest on top\n        setTasks(prev => [created, ...prev]);\n        setTitle(\"\");\n        setDescription(\"\");\n      } else {\n        // Save edit\n        const res = await fetch(`${API_BASE}/${editingId}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            title: title.trim(),\n            description\n          })\n        });\n        if (!res.ok) throw new Error(\"Update failed\");\n        const updated = await res.json();\n        setTasks(prev => prev.map(t => t.id === updated.id ? updated : t));\n        setEditingId(null);\n        setTitle(\"\");\n        setDescription(\"\");\n      }\n    } catch (err) {\n      console.error(\"Submit error:\", err);\n    }\n  }\n\n  // Delete\n  async function handleDelete(id) {\n    try {\n      const res = await fetch(`${API_BASE}/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!res.ok) throw new Error(\"Delete failed\");\n      setTasks(prev => prev.filter(t => t.id !== id));\n    } catch (err) {\n      console.error(\"Delete error:\", err);\n    }\n  }\n\n  // Toggle complete (works by sending only completed; backend merges fields)\n  async function handleToggleComplete(task) {\n    try {\n      const res = await fetch(`${API_BASE}/${task.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          completed: task.completed ? 0 : 1\n        })\n      });\n      if (!res.ok) throw new Error(\"Toggle complete failed\");\n      const updated = await res.json();\n      // Refresh UI ordering: incomplete first (0), then completed (1)\n      setTasks(prev => {\n        const newTasks = prev.map(t => t.id === updated.id ? updated : t);\n        newTasks.sort((a, b) => a.completed - b.completed || new Date(b.created_at) - new Date(a.created_at));\n        return [...newTasks];\n      });\n    } catch (err) {\n      console.error(\"Complete error:\", err);\n    }\n  }\n\n  // Start edit: populate form with the task\n  function startEdit(task) {\n    setEditingId(task.id);\n    setTitle(task.title || \"\");\n    setDescription(task.description || \"\");\n    // focus input optionally\n    const el = document.querySelector(\".task-form input\");\n    if (el) el.focus();\n  }\n\n  // Cancel edit\n  function cancelEdit() {\n    setEditingId(null);\n    setTitle(\"\");\n    setDescription(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"task-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          placeholder: \"Task title\",\n          \"aria-label\": \"Task title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          placeholder: \"Description (optional)\",\n          \"aria-label\": \"Task description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: editingId ? \"Save Changes\" : \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), editingId && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: cancelEdit,\n          style: {\n            marginLeft: 8\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"tasks\",\n        children: [tasks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty\",\n          children: \"No tasks yet \\u2014 add one!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"article\", {\n          className: `task ${task.completed ? \"done\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-main\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleToggleComplete(task),\n              children: task.completed ? \"Undo\" : \"Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => startEdit(task),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"danger\",\n              onClick: () => handleDelete(task.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mgsbbPQSWWMtFarIhqfZ3wp6oWk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","title","setTitle","description","setDescription","editingId","setEditingId","API_BASE","fetchTasks","res","fetch","data","json","err","console","error","handleSubmit","e","preventDefault","trim","method","headers","body","JSON","stringify","ok","Error","created","prev","updated","map","t","id","handleDelete","filter","handleToggleComplete","task","completed","newTasks","sort","a","b","Date","created_at","startEdit","el","document","querySelector","focus","cancelEdit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","type","onClick","style","marginLeft","length","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/task-manager-final/client/src/App.js"],"sourcesContent":["// client/src/App.js\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [editingId, setEditingId] = useState(null);\n\n  // Use relative path so proxy (create-react-app) forwards to backend if configured.\n  const API_BASE = \"/api/tasks\";\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  async function fetchTasks() {\n    try {\n      const res = await fetch(API_BASE);\n      const data = await res.json();\n      setTasks(data);\n    } catch (err) {\n      console.error(\"Fetch tasks error:\", err);\n    }\n  }\n\n  // Add or Save (edit)\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (!title.trim()) return;\n\n    try {\n      if (editingId === null) {\n        // Create\n        const res = await fetch(API_BASE, {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ title: title.trim(), description }),\n        });\n        if (!res.ok) throw new Error(\"Create failed\");\n        const created = await res.json();\n        // Put newest on top\n        setTasks((prev) => [created, ...prev]);\n        setTitle(\"\");\n        setDescription(\"\");\n      } else {\n        // Save edit\n        const res = await fetch(`${API_BASE}/${editingId}`, {\n          method: \"PUT\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ title: title.trim(), description }),\n        });\n        if (!res.ok) throw new Error(\"Update failed\");\n        const updated = await res.json();\n        setTasks((prev) =>\n          prev.map((t) => (t.id === updated.id ? updated : t))\n        );\n        setEditingId(null);\n        setTitle(\"\");\n        setDescription(\"\");\n      }\n    } catch (err) {\n      console.error(\"Submit error:\", err);\n    }\n  }\n\n  // Delete\n  async function handleDelete(id) {\n    try {\n      const res = await fetch(`${API_BASE}/${id}`, { method: \"DELETE\" });\n      if (!res.ok) throw new Error(\"Delete failed\");\n      setTasks((prev) => prev.filter((t) => t.id !== id));\n    } catch (err) {\n      console.error(\"Delete error:\", err);\n    }\n  }\n\n  // Toggle complete (works by sending only completed; backend merges fields)\n  async function handleToggleComplete(task) {\n    try {\n      const res = await fetch(`${API_BASE}/${task.id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ completed: task.completed ? 0 : 1 }),\n      });\n      if (!res.ok) throw new Error(\"Toggle complete failed\");\n      const updated = await res.json();\n      // Refresh UI ordering: incomplete first (0), then completed (1)\n      setTasks((prev) => {\n        const newTasks = prev.map((t) => (t.id === updated.id ? updated : t));\n        newTasks.sort(\n          (a, b) =>\n            a.completed - b.completed ||\n            new Date(b.created_at) - new Date(a.created_at)\n        );\n        return [...newTasks];\n      });\n    } catch (err) {\n      console.error(\"Complete error:\", err);\n    }\n  }\n\n  // Start edit: populate form with the task\n  function startEdit(task) {\n    setEditingId(task.id);\n    setTitle(task.title || \"\");\n    setDescription(task.description || \"\");\n    // focus input optionally\n    const el = document.querySelector(\".task-form input\");\n    if (el) el.focus();\n  }\n\n  // Cancel edit\n  function cancelEdit() {\n    setEditingId(null);\n    setTitle(\"\");\n    setDescription(\"\");\n  }\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Task Manager</h1>\n      </header>\n\n      <main>\n        <form onSubmit={handleSubmit} className=\"task-form\">\n          <input\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"Task title\"\n            aria-label=\"Task title\"\n          />\n          <input\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder=\"Description (optional)\"\n            aria-label=\"Task description\"\n          />\n          <button type=\"submit\">\n            {editingId ? \"Save Changes\" : \"Add Task\"}\n          </button>\n          {editingId && (\n            <button\n              type=\"button\"\n              onClick={cancelEdit}\n              style={{ marginLeft: 8 }}\n            >\n              Cancel\n            </button>\n          )}\n        </form>\n\n        <section className=\"tasks\">\n          {tasks.length === 0 && (\n            <p className=\"empty\">No tasks yet — add one!</p>\n          )}\n\n          {tasks.map((task) => (\n            <article\n              key={task.id}\n              className={`task ${task.completed ? \"done\" : \"\"}`}\n            >\n              <div className=\"task-main\">\n                <h3>{task.title}</h3>\n                <p>{task.description}</p>\n              </div>\n\n              <div className=\"task-actions\">\n                {/* all action buttons MUST be type=\"button\" to avoid submitting the form */}\n                <button\n                  type=\"button\"\n                  onClick={() => handleToggleComplete(task)}\n                >\n                  {task.completed ? \"Undo\" : \"Complete\"}\n                </button>\n\n                <button type=\"button\" onClick={() => startEdit(task)}>\n                  Edit\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"danger\"\n                  onClick={() => handleDelete(task.id)}\n                >\n                  Delete\n                </button>\n              </div>\n            </article>\n          ))}\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}